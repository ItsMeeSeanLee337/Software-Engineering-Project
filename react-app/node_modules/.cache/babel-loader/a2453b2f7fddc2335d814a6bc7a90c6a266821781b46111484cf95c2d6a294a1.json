{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blake\\\\Desktop\\\\Rutgers Sem 4\\\\Software Engineering\\\\Software-Engineering-Project\\\\react-app\\\\src\\\\Modules\\\\IngredientListForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/IngredientListForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientList = ({\n  updateIngredients\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState(['']);\n  const handleIngredientChange = (index, value) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index] = value;\n    setIngredients(updatedIngredients);\n    updateIngredients(updatedIngredients); // Update parent's state with the updated ingredients\n  };\n\n  const addIngredient = () => {\n    setIngredients(prevIngredients => [...prevIngredients, '']);\n  };\n  const removeIngredient = index => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients.splice(index, 1);\n    setIngredients(updatedIngredients);\n    updateIngredients(updatedIngredients); // Update parent's state with the updated ingredients\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"alignCenter\",\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Ingredient ${index + 1}`,\n          value: ingredient,\n          onChange: e => handleIngredientChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeIngredient(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIngredient,\n        children: \"Add Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientList, \"OQvsTZoM7yddvPtel3Kh4+GqcQo=\");\n_c = IngredientList;\nexport default IngredientList;\nvar _c;\n$RefreshReg$(_c, \"IngredientList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IngredientList","updateIngredients","_s","ingredients","setIngredients","handleIngredientChange","index","value","updatedIngredients","addIngredient","prevIngredients","removeIngredient","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","ingredient","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/blake/Desktop/Rutgers Sem 4/Software Engineering/Software-Engineering-Project/react-app/src/Modules/IngredientListForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/IngredientListForm.css'\r\nconst IngredientList = ({updateIngredients}) => {\r\n  const [ingredients, setIngredients] = useState(['']);\r\n\r\n  const handleIngredientChange = (index, value) => {\r\n    const updatedIngredients = [...ingredients];\r\n    updatedIngredients[index] = value;\r\n    setIngredients(updatedIngredients);\r\n    updateIngredients(updatedIngredients);  // Update parent's state with the updated ingredients\r\n  };\r\n  \r\n\r\n  const addIngredient = () => {\r\n    setIngredients(prevIngredients => [...prevIngredients, '']);\r\n  };\r\n  \r\n\r\n  const removeIngredient = (index) => {\r\n    const updatedIngredients = [...ingredients];\r\n    updatedIngredients.splice(index, 1);\r\n    setIngredients(updatedIngredients);\r\n    updateIngredients(updatedIngredients);  // Update parent's state with the updated ingredients\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <h2 className='alignCenter'>Ingredients</h2>\r\n      <ul>\r\n        {ingredients.map((ingredient, index) => (\r\n          <li key={index}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder={`Ingredient ${index + 1}`}\r\n              value={ingredient}\r\n              onChange={(e) => handleIngredientChange(index, e.target.value)}\r\n            />\r\n            <button onClick={() => removeIngredient(index)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"button-container\">\r\n        <button onClick={addIngredient}>Add Ingredient</button>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default IngredientList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAEpD,MAAMQ,sBAAsB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC/C,MAAMC,kBAAkB,GAAG,CAAC,GAAGL,WAAW,CAAC;IAC3CK,kBAAkB,CAACF,KAAK,CAAC,GAAGC,KAAK;IACjCH,cAAc,CAACI,kBAAkB,CAAC;IAClCP,iBAAiB,CAACO,kBAAkB,CAAC,CAAC,CAAE;EAC1C,CAAC;;EAGD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BL,cAAc,CAACM,eAAe,IAAI,CAAC,GAAGA,eAAe,EAAE,EAAE,CAAC,CAAC;EAC7D,CAAC;EAGD,MAAMC,gBAAgB,GAAIL,KAAK,IAAK;IAClC,MAAME,kBAAkB,GAAG,CAAC,GAAGL,WAAW,CAAC;IAC3CK,kBAAkB,CAACI,MAAM,CAACN,KAAK,EAAE,CAAC,CAAC;IACnCF,cAAc,CAACI,kBAAkB,CAAC;IAClCP,iBAAiB,CAACO,kBAAkB,CAAC,CAAC,CAAE;EAC1C,CAAC;;EAID,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAIe,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CnB,OAAA;MAAAc,QAAA,EACGV,WAAW,CAACgB,GAAG,CAAC,CAACC,UAAU,EAAEd,KAAK,kBACjCP,OAAA;QAAAc,QAAA,gBACEd,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAG,cAAahB,KAAK,GAAG,CAAE,EAAE;UACvCC,KAAK,EAAEa,UAAW;UAClBG,QAAQ,EAAGC,CAAC,IAAKnB,sBAAsB,CAACC,KAAK,EAAEkB,CAAC,CAACC,MAAM,CAAClB,KAAK;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACFnB,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACL,KAAK,CAAE;UAAAO,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPxDZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLnB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/Bd,OAAA;QAAQ2B,OAAO,EAAEjB,aAAc;QAAAI,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAAhB,EAAA,CA/CKF,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}