{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blake\\\\Desktop\\\\Rutgers Sem 4\\\\Software Engineering\\\\Software-Engineering-Project\\\\react-app\\\\src\\\\Pages\\\\Display_Custom_Recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Navbar from './Navbar';\nimport axios from 'axios';\nimport '../styles/displayCustomRecipe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Display_Custom_Recipes() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  var response;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        //const apiUrl = 'http://localhost:8080/createRecipe';  // Replace with your server endpoint\n        const apiUrl = 'http://172.16.122.26:8080/CustomRecipe/Display/1'; // Replace with your server endpoint\n\n        response = await axios.get(apiUrl);\n        console.log('Response:', response.data);\n        setRecipes(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures this effect runs once on mount\n\n  console.log(\"This is response:\");\n  console.log(response);\n  console.log();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Saved Custom Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title: \", recipe.Title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", recipe.Description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Array.isArray(recipe.list) ?\n            // For the first type of ingredient structure\n            recipe.list.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)) :\n            // For the second type of ingredient structure\n            recipe.list.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ingredient\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, recipe.crID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Display_Custom_Recipes, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = Display_Custom_Recipes;\nexport default Display_Custom_Recipes;\nvar _c;\n$RefreshReg$(_c, \"Display_Custom_Recipes\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Display_Custom_Recipes","_s","recipes","setRecipes","response","fetchData","apiUrl","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","recipe","Title","Description","Array","isArray","list","ingredient","index","ingredients","crID","_c","$RefreshReg$"],"sources":["C:/Users/blake/Desktop/Rutgers Sem 4/Software Engineering/Software-Engineering-Project/react-app/src/Pages/Display_Custom_Recipes.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport Navbar from './Navbar'\r\nimport axios from 'axios';\r\nimport '../styles/displayCustomRecipe.css'\r\nfunction Display_Custom_Recipes() {\r\nconst [recipes, setRecipes] = useState([]);\r\nvar response;\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n    \r\n      try {\r\n        //const apiUrl = 'http://localhost:8080/createRecipe';  // Replace with your server endpoint\r\n        const apiUrl = 'http://172.16.122.26:8080/CustomRecipe/Display/1';  // Replace with your server endpoint\r\n\r\n        response = await axios.get(apiUrl);\r\n        console.log('Response:', response.data);\r\n        setRecipes(response.data)\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array ensures this effect runs once on mount\r\n\r\n\r\nconsole.log(\"This is response:\")\r\nconsole.log(response)\r\nconsole.log()\r\n\r\n\r\n  return (\r\n    <>\r\n    <Navbar></Navbar>\r\n    <div className='flex-container'>\r\n        <h3>Your Saved Custom Recipes</h3>\r\n        <div>\r\n            {recipes.map(recipe => (\r\n          <div key={recipe.crID}>\r\n            <p>Title: {recipe.Title}</p>\r\n            <p>Description: {recipe.Description}</p>\r\n            <p>Ingredients:</p>\r\n            <ul>\r\n              {Array.isArray(recipe.list) ? (\r\n                // For the first type of ingredient structure\r\n                recipe.list.map((ingredient, index) => (\r\n                  <li key={index}>{ingredient}</li>\r\n                ))\r\n              ) : (\r\n                // For the second type of ingredient structure\r\n                recipe.list.ingredients.map((ingredient, index) => (\r\n                  <li key={index}>{ingredient}</li>\r\n                ))\r\n              )}\r\n            </ul>\r\n            <hr />\r\n          </div>\r\n        ))}</div>\r\n        \r\n    \r\n    \r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Display_Custom_Recipes"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}